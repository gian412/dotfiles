{"version":3,"sources":["../webpack/bootstrap",".././src/DataExtractionResult.ts",".././src/index.ts",".././src/js/api/DataExtractorApiImpl.ts",".././src/js/api/default-extractors/AsIsDataExtractor.ts",".././src/js/api/default-extractors/GetDebugVisualizationDataExtractor.ts",".././src/js/api/default-extractors/GridExtractor.ts",".././src/js/api/default-extractors/ObjectGraphExtractor.ts",".././src/js/api/default-extractors/PlotlyDataExtractor.ts",".././src/js/api/default-extractors/TableExtractor.ts",".././src/js/api/default-extractors/ToStringExtractor.ts",".././src/js/api/default-extractors/TypeScriptDataExtractors.ts",".././src/js/api/default-extractors/index.ts",".././src/js/api/default-extractors/registerDefaultDataExtractors.ts",".././src/js/api/index.ts",".././src/js/api/injection.ts",".././src/js/global-helpers.ts",".././src/js/helpers/asData.ts",".././src/js/helpers/cache.ts",".././src/js/helpers/createGraph.ts",".././src/js/helpers/createGraphFromPointers.ts",".././src/js/helpers/index.ts",".././src/js/helpers/markedGrid.ts",".././src/js/helpers/tryEval.ts",".././src/js/index.ts",".././src/util.ts","../external \"fs\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export interface DataExtractionResult {\n\tdata: VisualizationData;\n\tusedExtractor: DataExtractorInfo;\n\tavailableExtractors: DataExtractorInfo[];\n}\n\n/**\n * Instances must be valid json values.\n */\nexport interface VisualizationData {\n\tkind: Record<string, true>;\n}\n\nexport interface DataExtractorInfo {\n\tid: DataExtractorId;\n\tname: string;\n\tpriority: number;\n}\n\nexport type DataExtractorId = {\n\t__brand: \"DataExtractorId\";\n} & string;\n\nexport function isVisualizationData(val: unknown): val is VisualizationData {\n\tif (typeof val !== \"object\" || !val || !(\"kind\" in val)) {\n\t\treturn false;\n\t}\n\n\tconst obj = val as any;\n\tif (typeof obj.kind !== \"object\" || !obj.kind) {\n\t\treturn false;\n\t}\n\n\treturn Object.values(obj.kind).every(val => val === true);\n}\n","export * from \"./js\";\nexport * from \"./CommonDataTypes\";\nexport * from \"./DataExtractionResult\";\n","import {\n\tDataExtractorApi,\n\tDataResult,\n\tJSONString,\n\tDataExtractor,\n\tDataExtraction,\n\tExtractionCollector,\n} from \"./DataExtractorApi\";\nimport { DataExtractorInfo } from \"../../DataExtractionResult\";\nimport { registerDefaultExtractors } from \"./default-extractors\";\n\n/**\n * @internal\n */\nexport class DataExtractorApiImpl implements DataExtractorApi {\n\tpublic static lastEvalFn: (<T>(expression: string) => T) | undefined;\n\n\tprivate readonly extractors = new Map<string, DataExtractor>();\n\n\tprivate toJson<TData>(data: TData): JSONString<TData> {\n\t\treturn JSON.stringify(data) as any;\n\t}\n\n\tpublic registerExtractor(extractor: DataExtractor): void {\n\t\tthis.extractors.set(extractor.id, extractor);\n\t}\n\n\tpublic registerExtractors(extractors: DataExtractor[]): void {\n\t\tfor (const e of extractors) {\n\t\t\tthis.registerExtractor(e);\n\t\t}\n\t}\n\n\tpublic getData(\n\t\tvalueFn: () => unknown,\n\t\tevalFn: <T>(expression: string) => T,\n\t\tpreferredDataExtractorId: string | undefined\n\t): JSONString<DataResult> {\n\t\tconst extractions = new Array<DataExtraction>();\n\t\tconst extractionCollector: ExtractionCollector = {\n\t\t\taddExtraction(extraction) {\n\t\t\t\textractions.push(extraction);\n\t\t\t},\n\t\t};\n\n\t\tDataExtractorApiImpl.lastEvalFn = evalFn;\n\t\tconst value = valueFn();\n\t\tDataExtractorApiImpl.lastEvalFn = undefined;\n\n\t\tfor (const e of this.extractors.values()) {\n\t\t\te.getExtractions(value, extractionCollector, { evalFn });\n\t\t}\n\t\textractions.sort((a, b) => b.priority - a.priority);\n\t\tlet usedExtraction = extractions[0];\n\t\tif (!usedExtraction) {\n\t\t\treturn this.toJson({ kind: \"NoExtractors\" } as DataResult);\n\t\t}\n\n\t\tif (preferredDataExtractorId) {\n\t\t\tconst preferred = extractions.find(\n\t\t\t\te => e.id === preferredDataExtractorId\n\t\t\t);\n\t\t\tif (preferred) {\n\t\t\t\tusedExtraction = preferred;\n\t\t\t}\n\t\t}\n\n\t\tfunction mapExtractor(e: DataExtraction): DataExtractorInfo {\n\t\t\treturn {\n\t\t\t\tid: e.id as any,\n\t\t\t\tname: e.name,\n\t\t\t\tpriority: e.priority,\n\t\t\t};\n\t\t}\n\n\t\tconst data = usedExtraction.extractData();\n\t\treturn this.toJson({\n\t\t\tkind: \"Data\",\n\t\t\textractionResult: {\n\t\t\t\tdata,\n\t\t\t\tusedExtractor: mapExtractor(usedExtraction),\n\t\t\t\tavailableExtractors: extractions.map(mapExtractor),\n\t\t\t},\n\t\t} as DataResult);\n\t}\n\n\tpublic registerDefaultExtractors(preferExisting: boolean = false): void {\n\t\t// TODO consider preferExisting\n\t\tregisterDefaultExtractors(this);\n\t}\n}\n","import { isVisualizationData } from \"../../../DataExtractionResult\";\nimport {\n\tDataExtractor,\n\tExtractionCollector,\n\tDataExtractorContext,\n} from \"../..\";\n\nexport class AsIsDataExtractor implements DataExtractor {\n\treadonly id = \"as-is\";\n\tgetExtractions(\n\t\tdata: unknown,\n\t\textractionCollector: ExtractionCollector,\n\t\tcontext: DataExtractorContext\n\t): void {\n\t\tif (!isVisualizationData(data)) {\n\t\t\treturn;\n\t\t}\n\n\t\textractionCollector.addExtraction({\n\t\t\tid: this.id,\n\t\t\tname: \"As Is\",\n\t\t\tpriority: 500,\n\t\t\textractData() {\n\t\t\t\treturn data;\n\t\t\t},\n\t\t});\n\t}\n}\n","import { VisualizationData } from \"../../../DataExtractionResult\";\nimport {\n\tDataExtractor,\n\tExtractionCollector,\n\tDataExtractorContext,\n} from \"../DataExtractorApi\";\n\nexport class GetVisualizationDataExtractor implements DataExtractor {\n\treadonly id = \"get-visualization-data\";\n\tgetExtractions(\n\t\tdata: unknown,\n\t\tcollector: ExtractionCollector,\n\t\tcontext: DataExtractorContext\n\t): void {\n\t\tif (typeof data !== \"object\" || !data) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst getVisualizationData = (data as any)\n\t\t\t.getVisualizationData as Function;\n\t\tif (typeof getVisualizationData !== \"function\") {\n\t\t\treturn;\n\t\t}\n\n\t\tcollector.addExtraction({\n\t\t\tid: this.id,\n\t\t\tname: \"Use Method 'getVisualizationData'\",\n\t\t\tpriority: 600,\n\t\t\textractData() {\n\t\t\t\treturn getVisualizationData.apply(data);\n\t\t\t},\n\t\t});\n\t}\n}\n","import {\n\tDataExtractor,\n\tExtractionCollector,\n\tDataExtractorContext,\n} from \"../..\";\nimport { GridVisualizationData } from \"../../../CommonDataTypes\";\nimport { expect } from \"../../../util\";\n\nexport class GridExtractor implements DataExtractor {\n\treadonly id = \"grid\";\n\tgetExtractions(\n\t\tdata: unknown,\n\t\textractionCollector: ExtractionCollector,\n\t\tcontext: DataExtractorContext\n\t): void {\n\t\tif (!Array.isArray(data)) {\n\t\t\treturn;\n\t\t}\n\n\t\textractionCollector.addExtraction({\n\t\t\tid: this.id,\n\t\t\tname: \"Array As Grid\",\n\t\t\tpriority: 500,\n\t\t\textractData: () =>\n\t\t\t\texpect<GridVisualizationData>({\n\t\t\t\t\tkind: { grid: true },\n\t\t\t\t\trows: [{ columns: data.map(d => ({ tag: \"\" + d })) }],\n\t\t\t\t}),\n\t\t});\n\t}\n}\n","import { VisualizationData } from \"../../../DataExtractionResult\";\nimport {\n\tDataExtractor,\n\tExtractionCollector,\n\tDataExtractorContext,\n} from \"../DataExtractorApi\";\nimport { createGraph, CreateGraphEdge } from \"../../helpers\";\n\nexport class ObjectGraphExtractor implements DataExtractor {\n\treadonly id = \"object-graph\";\n\n\tgetExtractions(\n\t\tdata: unknown,\n\t\tcollector: ExtractionCollector,\n\t\tcontext: DataExtractorContext\n\t): void {\n\t\tfunction isObject(val: unknown): val is object {\n\t\t\tif (typeof val !== \"object\") {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!val) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (!isObject(data)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcollector.addExtraction({\n\t\t\tid: \"object-graph\",\n\t\t\tname: \"Object Graph\",\n\t\t\tpriority: 99,\n\t\t\textractData() {\n\t\t\t\treturn createGraph(\n\t\t\t\t\t[data],\n\t\t\t\t\titem => {\n\t\t\t\t\t\tlet label = \"\";\n\t\t\t\t\t\tconst edges = new Array<CreateGraphEdge<any>>();\n\t\t\t\t\t\tif (item instanceof Set) {\n\t\t\t\t\t\t\tlabel = \"Set\";\n\t\t\t\t\t\t\tfor (const value of item.values()) {\n\t\t\t\t\t\t\t\tif (isObject(value)) {\n\t\t\t\t\t\t\t\t\tedges.push({ label: \"item\", to: value });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (item instanceof Map) {\n\t\t\t\t\t\t\tlabel = \"Map\";\n\t\t\t\t\t\t\tfor (const [key, value] of item.entries()) {\n\t\t\t\t\t\t\t\tif (isObject(value)) {\n\t\t\t\t\t\t\t\t\tedges.push({ label: key, to: value });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (const [key, val] of Object.entries(item)) {\n\t\t\t\t\t\t\t\tif (isObject(val)) {\n\t\t\t\t\t\t\t\t\tedges.push({ label: key, to: val });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst className = item.constructor\n\t\t\t\t\t\t\t\t? item.constructor.name\n\t\t\t\t\t\t\t\t: \"?\";\n\t\t\t\t\t\t\tlabel = className;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tshape: \"box\",\n\t\t\t\t\t\t\tedges,\n\t\t\t\t\t\t\tcolor: item === data ? \"lightblue\" : undefined,\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\t{ maxSize: 50 }\n\t\t\t\t);\n\t\t\t},\n\t\t});\n\t}\n}\n","import { PlotlyVisualizationData } from \"../../../CommonDataTypes\";\nimport { expect } from \"../../../util\";\nimport {\n\tDataExtractor,\n\tExtractionCollector,\n\tDataExtractorContext,\n} from \"../DataExtractorApi\";\n\nexport class PlotlyDataExtractor implements DataExtractor {\n\treadonly id = \"plot\";\n\n\tgetExtractions(\n\t\tdata: unknown,\n\t\tcollector: ExtractionCollector,\n\t\tcontext: DataExtractorContext\n\t): void {\n\t\tif (!Array.isArray(data)) {\n\t\t\treturn;\n\t\t}\n\t\tif (data.some(x => typeof x !== \"number\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tcollector.addExtraction({\n\t\t\tid: \"plot-y\",\n\t\t\tname: \"Plot as y-Values\",\n\t\t\tpriority: 1001,\n\t\t\textractData: () =>\n\t\t\t\texpect<PlotlyVisualizationData>({\n\t\t\t\t\tkind: {\n\t\t\t\t\t\tplotly: true,\n\t\t\t\t\t},\n\t\t\t\t\tdata: [{ y: data }],\n\t\t\t\t}),\n\t\t});\n\t}\n}\n","import { isAssertionExpression } from \"typescript\";\nimport { DataExtractor, ExtractionCollector, DataExtractorContext } from \"..\";\nimport { TableVisualizationData } from \"../../../CommonDataTypes\";\nimport { expect } from \"../../../util\";\n\nfunction assert<T>(value: unknown): asserts value {}\n\nexport class TableDataExtractor implements DataExtractor {\n\treadonly id = \"table\";\n\n\tgetExtractions(\n\t\tdata: unknown,\n\t\tcollector: ExtractionCollector,\n\t\tcontext: DataExtractorContext\n\t): void {\n\t\tif (!Array.isArray(data)) {\n\t\t\treturn;\n\t\t}\n\t\tif (!data.every(d => typeof d === \"object\" && d)) {\n\t\t\treturn;\n\t\t}\n\t\tassert<object[]>(data);\n\n\t\tcollector.addExtraction({\n\t\t\tid: \"table\",\n\t\t\tname: \"Table\",\n\t\t\tpriority: 1000,\n\t\t\textractData() {\n\t\t\t\treturn expect<TableVisualizationData>({\n\t\t\t\t\tkind: {\n\t\t\t\t\t\ttable: true,\n\t\t\t\t\t},\n\t\t\t\t\trows: data,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n}\n","import { MonacoTextVisualizationData } from \"../../../CommonDataTypes\";\nimport { expect } from \"../../../util\";\nimport {\n\tDataExtractor,\n\tExtractionCollector,\n\tDataExtractorContext,\n} from \"../DataExtractorApi\";\n\nexport class ToStringDataExtractor implements DataExtractor {\n\treadonly id = \"to-string\";\n\n\tgetExtractions(\n\t\tdata: unknown,\n\t\tcollector: ExtractionCollector,\n\t\tcontext: DataExtractorContext\n\t): void {\n\t\tcollector.addExtraction({\n\t\t\tid: \"to-string\",\n\t\t\tname: \"To String\",\n\t\t\tpriority: 100,\n\t\t\textractData() {\n\t\t\t\treturn expect<MonacoTextVisualizationData>({\n\t\t\t\t\tkind: {\n\t\t\t\t\t\ttext: true,\n\t\t\t\t\t},\n\t\t\t\t\ttext: \"\" + data,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n}\n","import * as ts from \"typescript\"; // Only compile-time import!\nimport { AstTreeNode } from \"../../..\";\nimport { AstTreeVisualizationData } from \"../../../CommonDataTypes\";\nimport { expect } from \"../../../util\";\nimport {\n\tDataExtractor,\n\tExtractionCollector,\n\tDataExtractorContext,\n} from \"../DataExtractorApi\";\n\nexport class TypeScriptAstDataExtractor implements DataExtractor {\n\treadonly id = \"typescript-ast\";\n\n\tgetExtractions(\n\t\tdata: unknown,\n\t\tcollector: ExtractionCollector,\n\t\t{ evalFn }: DataExtractorContext\n\t): void {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction getApi(): typeof ts {\n\t\t\tif (typeof data === \"object\" && \"typescript\" in (data as object)) {\n\t\t\t\treturn (data as any).typescript;\n\t\t\t} else {\n\t\t\t\t// This might refer to global.require which uses CWD for resolution!\n\t\t\t\tconst require = evalFn<(request: string) => unknown>(\"require\");\n\t\t\t\treturn require(\"typescript\") as typeof ts;\n\t\t\t}\n\t\t}\n\n\t\tlet tsApi: typeof ts;\n\t\ttry {\n\t\t\ttsApi = getApi();\n\t\t\tif (!tsApi) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst helper = new Helper(tsApi);\n\n\t\tlet rootSourceFile: ts.SourceFile | undefined = undefined;\n\t\tlet rootNode: ts.Node | undefined = undefined;\n\t\tlet marked: Set<ts.Node>;\n\t\tlet fn: (n: ts.Node) => string | undefined = (n: ts.Node) => undefined;\n\t\tif (\n\t\t\tArray.isArray(data) &&\n\t\t\tdata.every(helper.isNode) &&\n\t\t\tdata.length > 0\n\t\t) {\n\t\t\trootSourceFile = helper.getSourceFile(data[0] as ts.Node);\n\t\t\tmarked = new Set(data);\n\t\t} else if (helper.isNode(data)) {\n\t\t\trootSourceFile = helper.getSourceFile(data);\n\t\t\tmarked = new Set([data]);\n\t\t} else if (typeof data === \"object\" && data) {\n\t\t\tmarked = new Set();\n\t\t\tconst map = new Map<ts.Node, string>();\n\t\t\tfn = (n: ts.Node) => map.get(n);\n\t\t\tfor (const [key, item] of Object.entries(data)) {\n\t\t\t\tif (key === \"fn\") {\n\t\t\t\t\tfn = item;\n\t\t\t\t} else if (key === \"typescript\") {\n\t\t\t\t} else {\n\t\t\t\t\tif (key === \"rootNode\") {\n\t\t\t\t\t\trootNode = item;\n\t\t\t\t\t}\n\t\t\t\t\tlet nodes: Array<ts.Node>;\n\t\t\t\t\tif (helper.isNode(item)) {\n\t\t\t\t\t\tnodes = [item];\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tArray.isArray(item) &&\n\t\t\t\t\t\titem.every(helper.isNode)\n\t\t\t\t\t) {\n\t\t\t\t\t\tnodes = item;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (nodes.length > 0 && !rootSourceFile) {\n\t\t\t\t\t\trootSourceFile = helper.getSourceFile(nodes[0]);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const n of nodes) {\n\t\t\t\t\t\tmarked.add(n);\n\t\t\t\t\t\tmap.set(n, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!rootSourceFile) {\n\t\t\treturn;\n\t\t}\n\t\tconst finalRootSourceFile = rootSourceFile;\n\n\t\tcollector.addExtraction({\n\t\t\tid: \"ts-ast\",\n\t\t\tname: \"TypeScript AST\",\n\t\t\tpriority: 1000,\n\t\t\textractData() {\n\t\t\t\treturn expect<AstTreeVisualizationData>({\n\t\t\t\t\tkind: { text: true, tree: true, ast: true },\n\t\t\t\t\troot: helper.toTreeNode(\n\t\t\t\t\t\trootNode || finalRootSourceFile,\n\t\t\t\t\t\t\"root\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tmarked,\n\t\t\t\t\t\tfn\n\t\t\t\t\t),\n\t\t\t\t\ttext: finalRootSourceFile.text,\n\t\t\t\t\tfileName: \"index.ts\",\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n}\n\nclass Helper {\n\tconstructor(private readonly tsApi: typeof ts) {}\n\n\tgetPropertyNameInParent(value: any, parent: any): string | undefined {\n\t\tfor (const propertyName in parent) {\n\t\t\tif (propertyName.startsWith(\"_\")) continue;\n\n\t\t\tconst member = parent[propertyName];\n\t\t\tif (member === value) {\n\t\t\t\treturn propertyName;\n\t\t\t}\n\n\t\t\tif (Array.isArray(member)) {\n\t\t\t\tconst index = member.indexOf(value);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\treturn `${propertyName}[${index}]`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetChildren(node: ts.Node): ts.Node[] {\n\t\tconst result = new Array<ts.Node>();\n\t\tthis.tsApi.forEachChild(node, n => {\n\t\t\tresult.push(n);\n\t\t});\n\t\treturn result;\n\t}\n\n\ttoTreeNode(\n\t\tnode: ts.Node,\n\t\tmemberName: string,\n\t\tsegmentName: string,\n\t\tmarked: Set<ts.Node>,\n\t\temphasizedValueFn: (node: ts.Node) => string | undefined\n\t): AstTreeNode {\n\t\tconst name = this.tsApi.SyntaxKind[node.kind];\n\t\tconst children = this.getChildren(node)\n\t\t\t.map((childNode, idx) => {\n\t\t\t\tlet parentPropertyName =\n\t\t\t\t\tthis.getPropertyNameInParent(childNode, node) || \"\";\n\n\t\t\t\tif (childNode.kind == this.tsApi.SyntaxKind.SyntaxList) {\n\t\t\t\t\tconst children = this.getChildren(childNode);\n\t\t\t\t\tfor (const c of children) {\n\t\t\t\t\t\tconst name =\n\t\t\t\t\t\t\tthis.getPropertyNameInParent(c, node) || \"\";\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tparentPropertyName = name;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet segmentName = \".\" + parentPropertyName;\n\t\t\t\tif (node.kind == this.tsApi.SyntaxKind.SyntaxList) {\n\t\t\t\t\tparentPropertyName = \"\" + idx;\n\t\t\t\t\tsegmentName = `[${idx}]`;\n\t\t\t\t}\n\n\t\t\t\treturn this.toTreeNode(\n\t\t\t\t\tchildNode,\n\t\t\t\t\tparentPropertyName,\n\t\t\t\t\tsegmentName,\n\t\t\t\t\tmarked,\n\t\t\t\t\temphasizedValueFn\n\t\t\t\t);\n\t\t\t})\n\t\t\t.filter(c => c !== null);\n\n\t\tlet value: string | undefined = undefined;\n\n\t\tif (this.tsApi.isIdentifier(node)) {\n\t\t\tvalue = node.text || (node.escapedText as string);\n\t\t} else if (this.tsApi.isLiteralExpression(node)) {\n\t\t\tvalue = node.text;\n\t\t}\n\n\t\tconst items: AstTreeNode[\"items\"] = [\n\t\t\t{ text: `${memberName}: `, emphasis: \"style1\" },\n\t\t\t{ text: name },\n\t\t];\n\n\t\tconst emphasizedVal = emphasizedValueFn(node);\n\t\tif (value) {\n\t\t\titems.push({ text: value, emphasis: \"style2\" });\n\t\t}\n\t\tif (emphasizedVal) {\n\t\t\titems.push({ text: emphasizedVal, emphasis: \"style3\" });\n\t\t}\n\n\t\treturn {\n\t\t\titems,\n\t\t\tchildren: children,\n\t\t\tsegment: segmentName,\n\t\t\tspan: {\n\t\t\t\tlength: node.end - node.pos,\n\t\t\t\tstart: node.pos,\n\t\t\t},\n\t\t\tisMarked: marked.has(node),\n\t\t};\n\t}\n\n\tisNode = (node: unknown): node is ts.Node => {\n\t\treturn (\n\t\t\ttypeof node === \"object\" &&\n\t\t\tnode !== null &&\n\t\t\t(this.tsApi.isToken(node as any) ||\n\t\t\t\t(this.tsApi as any).isNode(node))\n\t\t);\n\t};\n\n\tgetSourceFile(node: ts.Node | any): ts.SourceFile {\n\t\tif (!node) {\n\t\t\tthrow new Error(\"Detached node\");\n\t\t}\n\t\tif (this.tsApi.isSourceFile(node)) {\n\t\t\treturn node;\n\t\t}\n\t\tif (!(\"getSourceFile\" in node)) {\n\t\t\treturn this.getSourceFile(node.parent);\n\t\t}\n\t\treturn node.getSourceFile();\n\t}\n}\n","export { registerDefaultExtractors } from \"./registerDefaultDataExtractors\";\n","import { DataExtractorApi } from \"../DataExtractorApi\";\nimport { TypeScriptAstDataExtractor } from \"./TypeScriptDataExtractors\";\nimport { AsIsDataExtractor } from \"./AsIsDataExtractor\";\nimport { GetVisualizationDataExtractor } from \"./GetDebugVisualizationDataExtractor\";\nimport { ToStringDataExtractor } from \"./ToStringExtractor\";\nimport { PlotlyDataExtractor } from \"./PlotlyDataExtractor\";\nimport { ObjectGraphExtractor } from \"./ObjectGraphExtractor\";\nimport { getDataExtractorApi } from \"../injection\";\nimport { GridExtractor } from \"./GridExtractor\";\nimport { TableDataExtractor } from \"./TableExtractor\";\n\n/**\n * The default data extractors should be registered by VS Code automatically.\n * Registering them manually ensures that they are up to date.\n */\nexport function registerDefaultExtractors(\n\tapi: DataExtractorApi = getDataExtractorApi()\n) {\n\tfor (const item of [\n\t\tnew TypeScriptAstDataExtractor(),\n\t\tnew AsIsDataExtractor(),\n\t\tnew GetVisualizationDataExtractor(),\n\t\tnew ToStringDataExtractor(),\n\t\tnew PlotlyDataExtractor(),\n\t\tnew ObjectGraphExtractor(),\n\t\tnew GridExtractor(),\n\t\tnew TableDataExtractor(),\n\t]) {\n\t\tapi.registerExtractor(item);\n\t}\n}\n","export * from \"./DataExtractorApi\";\nexport * from \"./injection\";\nexport { DataExtractorApiImpl } from \"./DataExtractorApiImpl\";\n","import * as fs from \"fs\";\nimport { DataExtractorApi } from \"./DataExtractorApi\";\nimport { DataExtractorApiImpl } from \"./DataExtractorApiImpl\";\nimport * as helpers from \"../helpers\";\nimport * as globalHelpers from \"../global-helpers\";\n\n/**\n * Returns standalone JS code representing an expression that initializes the data extraction API.\n * This expression returns nothing.\n * This function is called in the VS Code extension, the expression is evaluated in the debugee.\n */\nexport function getExpressionToInitializeDataExtractorApi(): string {\n\tconst _fs = require(\"fs\") as typeof fs;\n\tconst moduleSrc = _fs.readFileSync(__filename, { encoding: \"utf8\" });\n\treturn `((function () {\n\t\tlet module = {};\n\t\t${moduleSrc}\n\t\treturn module.exports.getDataExtractorApi();\n\t})())`;\n}\n\n/**\n * Returns standalone JS code representing an expression returns the data extraction API.\n * This expression returns an object of type `DataExtractorApi`.\n * If the API must be initialized with `getExpressionToInitializeDataExtractorApi()`,\n * it throws an exception containing the text of `ApiHasNotBeenInitializedCode`.\n * This function is called in the VS Code extension, the expression is evaluated in the debugee.\n */\nexport function getExpressionForDataExtractorApi(): string {\n\treturn `((${selfContainedGetInitializedDataExtractorApi.toString()})())`;\n}\n\nconst apiKey = \"@hediet/data-extractor-api/v2\";\n\nexport function getDataExtractorApi(): DataExtractorApi {\n\tinstallHelpers();\n\tconst globalObj =\n\t\ttypeof window === \"object\" ? (window as any) : (global as any);\n\tif (!globalObj[apiKey]) {\n\t\tglobalObj[apiKey] = new DataExtractorApiImpl();\n\t}\n\treturn globalObj[apiKey];\n}\n\n/**\n * This code is used to detect if the API has not been initialized yet.\n * @internal\n */\nexport const ApiHasNotBeenInitializedCode = \"EgH0cybXij1jYUozyakO\" as const;\n\n/**\n * @internal\n */\nfunction selfContainedGetInitializedDataExtractorApi(): DataExtractorApi {\n\tconst globalObj =\n\t\ttypeof window === \"object\" ? (window as any) : (global as any);\n\tconst key: typeof apiKey = \"@hediet/data-extractor-api/v2\";\n\tlet api: DataExtractorApi | undefined = globalObj[key];\n\tif (!api) {\n\t\tconst code: typeof ApiHasNotBeenInitializedCode =\n\t\t\t\"EgH0cybXij1jYUozyakO\";\n\t\tthrow new Error(\n\t\t\t`Data Extractor API has not been initialized. Code: ${code}`\n\t\t);\n\t}\n\treturn api;\n}\n\nexport function installHelpers(): void {\n\tconst globalObj =\n\t\ttypeof window === \"object\" ? (window as any) : (global as any);\n\t// `hediet` as prefix to avoid name collision (I own `hediet.de`).\n\tglobalObj[\"hedietDbgVis\"] = { ...helpers, ...globalHelpers };\n}\n","export { getDataExtractorApi as getApi } from \"./api/injection\";\n","import { KnownVisualizationData } from \"../../CommonDataTypes\";\nimport { VisualizationData } from \"../../DataExtractionResult\";\n\nexport function asData(data: KnownVisualizationData): VisualizationData {\n\treturn data;\n}\n","import { DataExtractorApiImpl } from \"../api\";\n\nconst cached = new Map<string, any>();\n\n/**\n * Evaluates an expression\n */\nexport function cache<T>(\n\texpression: string | (() => T),\n\tid: string | number | undefined = undefined\n): T {\n\tlet resultFn: () => any;\n\tlet key: string;\n\tif (typeof expression === \"string\") {\n\t\tconst evalFn = DataExtractorApiImpl.lastEvalFn!;\n\t\tresultFn = () => evalFn(expression);\n\t\tkey = JSON.stringify({ expr: expression, id });\n\t} else {\n\t\tresultFn = () => expression();\n\t\tkey = JSON.stringify({ expr: expression.toString(), id });\n\t}\n\n\tif (cached.has(key)) {\n\t\treturn cached.get(key);\n\t}\n\n\tconst result = resultFn();\n\tcached.set(key, result);\n\n\treturn result;\n}\n","import {\n\tGraphEdge,\n\tGraphNode,\n\tGraphVisualizationData,\n} from \"../../CommonDataTypes\";\n\nexport type CreateGraphEdge<T> = { to: T } & Omit<GraphEdge, \"from\" | \"to\">;\n\n/**\n * Given a list of roots, it creates a graph by following their edges recursively.\n * Tracks cycles.\n */\nexport function createGraph<T>(\n\troots: T[],\n\tinfoSelector: (\n\t\titem: T\n\t) => {\n\t\tid?: string | number;\n\t\tedges: CreateGraphEdge<T>[];\n\t} & Omit<GraphNode, \"id\">,\n\toptions: { maxSize?: number } = {}\n): GraphVisualizationData {\n\tconst r: GraphVisualizationData = {\n\t\tkind: {\n\t\t\tgraph: true,\n\t\t},\n\t\tnodes: [],\n\t\tedges: [],\n\t};\n\tlet idCounter = 1;\n\tconst ids = new Map<T, string>();\n\tfunction getId(item: T): string {\n\t\tconst _id = infoSelector(item).id;\n\t\tif (_id !== undefined) {\n\t\t\treturn \"\" + _id;\n\t\t}\n\n\t\tlet id = ids.get(item);\n\t\tif (!id) {\n\t\t\tid = `hediet.de/id-${idCounter++}`;\n\t\t\tids.set(item, id);\n\t\t}\n\t\treturn id;\n\t}\n\n\tconst queue = new Array<{ item: T; dist: number }>(\n\t\t...roots.map(r => ({ item: r, dist: 0 }))\n\t);\n\tconst processed = new Set<T>();\n\n\twhile (queue.length > 0) {\n\t\tconst { item, dist } = queue.shift()!;\n\t\tif (processed.has(item)) {\n\t\t\tcontinue;\n\t\t}\n\t\tprocessed.add(item);\n\t\tconst nodeInfo = infoSelector(item);\n\t\tconst fromId = getId(item);\n\t\tr.nodes.push({ ...nodeInfo, id: fromId, [\"edges\" as any]: undefined });\n\t\tfor (const e of nodeInfo.edges) {\n\t\t\tconst toId = getId(e.to);\n\t\t\tr.edges.push({\n\t\t\t\t...e,\n\t\t\t\tfrom: fromId,\n\t\t\t\tto: toId,\n\t\t\t});\n\t\t\tlet shouldPush = !processed.has(e.to);\n\t\t\tif (\n\t\t\t\toptions.maxSize &&\n\t\t\t\tprocessed.size + queue.length > options.maxSize\n\t\t\t) {\n\t\t\t\tshouldPush = false;\n\t\t\t}\n\t\t\tif (shouldPush) {\n\t\t\t\tqueue.push({ item: e.to, dist: dist + 1 });\n\t\t\t}\n\t\t}\n\t}\n\treturn r;\n}\n","import { GraphNode, GraphVisualizationData } from \"../../CommonDataTypes\";\nimport { CreateGraphEdge, createGraph } from \"./createGraph\";\n\n/**\n * Given a labeled list of roots, it creates a graph by following their edges recursively.\n * Tracks cycles.\n */\nexport function createGraphFromPointers<T>(\n\troots: Record<string, T | undefined | null>,\n\tinfoSelector: (\n\t\titem: T\n\t) => {\n\t\tid?: string | number;\n\t\tedges: CreateGraphEdge<T>[];\n\t} & Omit<GraphNode, \"id\">\n): GraphVisualizationData {\n\tconst marker = {};\n\n\tinterface Pointer {\n\t\tmarker: {};\n\t\tname: string;\n\t\tvalue: T | null | undefined;\n\t}\n\n\tconst items = Object.entries(roots).map<Pointer>(([name, value]) => ({\n\t\tmarker,\n\t\tname,\n\t\tvalue,\n\t}));\n\n\treturn createGraph<T | Pointer>(items, item => {\n\t\tif (\"marker\" in item && item[\"marker\"] === marker) {\n\t\t\treturn {\n\t\t\t\tid: \"label____\" + item.name,\n\t\t\t\tcolor: \"orange\",\n\t\t\t\tlabel: item.name,\n\t\t\t\tedges: [{ to: item.value!, color: \"orange\", label: \"\" }].filter(\n\t\t\t\t\tt => !!t.to\n\t\t\t\t),\n\t\t\t};\n\t\t} else {\n\t\t\treturn infoSelector(item as T);\n\t\t}\n\t});\n}\n","export * from \"./createGraph\";\nexport * from \"./createGraphFromPointers\";\nexport * from \"./tryEval\";\nexport * from \"./markedGrid\";\nexport * from \"./cache\";\nexport * from \"./asData\";\n","import { GridVisualizationData } from \"../../CommonDataTypes\";\n\nexport function markedGrid(\n\tarr: any[],\n\tmarked: Record<string, number>\n): GridVisualizationData {\n\treturn {\n\t\tkind: { grid: true },\n\t\trows: [{ columns: arr.map(d => ({ tag: d })) }],\n\t\tmarkers: Object.entries(marked).map(([key, val]) => ({\n\t\t\tid: key,\n\t\t\trow: 0,\n\t\t\tcolumn: val,\n\t\t})),\n\t};\n}\n","import { DataExtractorApiImpl } from \"../api/DataExtractorApiImpl\";\n\n/**\n * Takes an object and eval's its values.\n * Each successfully evaluated value is added to the result object,\n * its original key is used as key in the result object.\n *\n * # Example\n * ```\n * const x = 1;\n * tryEval({ val1: \"x\", val2: \"x y\" })\n * // -> { val1: 1 }\n * ```\n */\nexport function tryEval(obj: Record<string, string>): Record<string, unknown>;\n/**\n * Takes an array of strings and eval's its items.\n * Each successfully evaluated value is added to the result object,\n * its original value is used as key.\n *\n * # Example\n * ```\n * const x = 1;\n * tryEval([\"x\", \"y\", \"a a\", \"x + 2\"])\n * // -> { x: 1, \"x + 2\": 3 }\n * ```\n */\nexport function tryEval(arr: string[]): Record<string, unknown>;\nexport function tryEval(\n\tobj: Record<string, string> | string[] | string\n): Record<string, unknown> | unknown {\n\tconst result: Record<string, unknown> = {};\n\tconst evalFn = DataExtractorApiImpl.lastEvalFn!;\n\tif (Array.isArray(obj)) {\n\t\tfor (const val of obj) {\n\t\t\ttry {\n\t\t\t\tresult[val] = evalFn(val);\n\t\t\t} catch (e) {}\n\t\t}\n\t} else {\n\t\tfor (const [key, val] of Object.entries(obj)) {\n\t\t\ttry {\n\t\t\t\tresult[key] = evalFn(val);\n\t\t\t} catch (e) {}\n\t\t}\n\t}\n\treturn result;\n}\n","export * from \"./api\";\nexport * from \"./helpers\";\nexport { registerDefaultExtractors } from \"./api/default-extractors\";\n","export function expect<T>(data: T): T {\n\treturn data;\n}\n","module.exports = require(\"fs\");"],"sourceRoot":""}